type Product {
  id: ID!
  name: String!
  image: String!
  description: String!
  price: Int!
  stock: Int!
  #   metadata: Map
}

type ProductImage {
  id: ID!
  image: String!
  product: Product! @goField(forceResolver: true)
}

type Category {
  id: ID!
  name: String!
  products: [Product!]! @goField(forceResolver: true)
}

extend type Query {
  category(id: ID!): Category!
  categories(limit: Int): [Category!]!
  product(id: ID!): Product!
  products(
    shopID: ID
    limit: Int
    offset: Int
    input: SearchProduct
    topSold: Boolean
  ): [Product!]!
}

extend type Mutation {
  createProduct(input: NewProduct!, shopID: ID!): Product!
  createProductImage(image: String!, productID: ID!): ProductImage!
  createProductImages(images: [String!]!, productID: ID!): Boolean!
}
input NewProduct {
  name: String!
  description: String!
  price: Int!
  stock: Int!
  categoryID: ID!
  image: String!
}

input SearchProduct {
  keyword: String
  minPrice: Int
  maxPrice: Int
  orderBy: String
  categoryID: String
  createdAtRange: Int
  highRating: Boolean
}
